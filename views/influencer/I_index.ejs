<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Influencer Dashboard - CollabSync</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="/i_index/I_index.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
  <!-- Header -->
  <header>
    <div class="header-container">
      <div class="logo">CollabSync</div>
      <nav>
        <ul>
          <li><a href="/influencer/home">Home</a></li>
          <li><a href="/influencer/explore">Explore brands</a></li>
          <li><a href="/influencer/profile">My Profile</a></li>
          <li class="notification-icon">
            <a href="#" id="notificationBtn">
              <i class="fas fa-bell"></i>
              <% if (notifications && notifications.filter(n=> !n.read).length > 0) { %>
                <span class="notification-badge">
                  <%= notifications.filter(n=> !n.read).length %>
                </span>
                <% } %>
            </a>
            <div class="notification-dropdown" id="notificationDropdown">
              <% if (notifications && notifications.length> 0) { %>
                <% notifications.forEach(notification=> { %>
                  <div class="notification-item <%= !notification.read ? 'unread' : '' %>">
                    <strong>
                      <%= notification.title %>
                    </strong>
                    <p>
                      <%= notification.message %>
                    </p>
                    <div class="notification-time">
                      <%= new Date(notification.createdAt).toLocaleString() %>
                    </div>
                  </div>
                  <% }); %>
                    <% } else { %>
                      <div class="notification-item">
                        <p>No notifications</p>
                      </div>
                      <% } %>
            </div>
          </li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- Sidebar Navigation (Right Side) -->
  <button class="toggle-btn" onclick="openMenu()">â˜°</button>
  <div class="menu" id="navMenu">
    <span class="close-btn" onclick="closeMenu()">&times;</span>
    <!-- <a href="#">Influencers</a> -->
    <a href="/influencer/collab">Collabs</a>
    <a href="/">Sign Out</a>
    <!-- <a href="#">Settings</a> -->
  </div>
  </div>

  <!-- Main Content -->
  <div class="container">
    <!-- Intro Section -->
    <div class="intro">
      <h1>Welcome, <%= influencer.name %>
      </h1>
      <p>Discover how CollabSync empowers influencers with seamless brand collaborations.</p>

      <div class="performance-metrics">
        <div class="metric-item">
          <div class="metric-value">
            <%= influencer.avgEngagementRate %>%
          </div>
          <div class="metric-label">Avg Engagement</div>
        </div>
        <div class="metric-item">
          <div class="metric-value">
            <%= influencer.totalAudience.toLocaleString() %>
          </div>
          <div class="metric-label">Total Audience</div>
        </div>
        <div class="metric-item">
          <div class="metric-value">$<%= influencer.monthlyEarnings.toLocaleString() %>
          </div>
          <div class="metric-label">Monthly Earnings</div>
        </div>
      </div>
    </div>

    <!-- Dashboard Overview -->
    <section class="dashboard">
      <h2>Dashboard Overview</h2>
      <div class="dashboard-items">
        <div class="dashboard-item">
          <h3>Active Collaborations</h3>
          <p class="active-collabs-count">
            <%= stats.activeCollaborations %>
          </p>
          <div class="progress-bar">
            <div class="progress" style="width: '<%= stats.completionPercentage %>%';"></div>
          </div>
          <small>
            <%= stats.nearingCompletion %> nearing completion
          </small>
        </div>
        <div class="dashboard-item">
          <h3>Pending Requests</h3>
          <p class="pending-requests-count">
            <%= stats.pendingRequests %>
          </p>
          <a href="/influencer/requests" class="view-requests">View Requests</a>
        </div>
        <div class="dashboard-item">
          <h3>Notifications</h3>
          <p class="notification-count">
            <%= notifications ? notifications.filter(n=> !n.read).length : 0 %> new alerts
          </p>
          <a href="/influencer/notifications" id="viewAllNotifications">View All</a>
        </div>
        <div class="dashboard-item">
          <h3>Earnings This Month</h3>
          <p class="earnings-amount">$<%= stats.monthlyEarnings.toLocaleString() %>
          </p>
          <small>
            <%= stats.earningsChange>= 0 ? '+' : '' %><%= stats.earningsChange %>% from last month
          </small>
        </div>
      </div>
    </section>

    <!-- New: Upcoming Deadlines Section -->
    <section class="deadlines">
      <h2>Upcoming Deadlines</h2>
      <div class="deadline-list">
        <% if (upcomingDeadlines && upcomingDeadlines.length> 0) { %>
          <% upcomingDeadlines.forEach(deadline=> { %>
            <div class="deadline-item">
              <div class="deadline-content">
                <h4>
                  <%= deadline.campaignName %>
                </h4>
                <p><i class="far fa-clock"></i> Due in <%= deadline.daysRemaining %> days</p>
                <div class="progress-bar">
                  <div class="progress" style="width: <%= deadline.progress %>%"></div>
                </div>
              </div>
              <a href="/influencer/collab/<%= deadline._id %>" class="action-btn">View Details</a>
            </div>
            <% }); %>
              <% } else { %>
                <p>No upcoming deadlines</p>
                <% } %>
      </div>
    </section>

    <!-- Performance Analytics Section -->
    <section class="analytics">
      <h2>Performance Analytics</h2>
      <div class="chart-container">
        <div class="chart-box">
          <h3>Engagement Growth</h3>
          <canvas id="engagementChart"></canvas>
        </div>
        <div class="chart-box">
          <h3>Follower Growth</h3>
          <canvas id="followerChart"></canvas>
        </div>
        <div class="chart-box">
          <h3>Collaboration Performance</h3>
          <canvas id="collabPerformanceChart"></canvas>
        </div>
        <div class="chart-box">
          <h3>Earnings Overview</h3>
          <canvas id="earningsChart"></canvas>
        </div>
      </div>
    </section>

    <!-- New: Recommended Brands Section -->
    <section class="recommended-brands">
      <h2>Brands You Might Like</h2>
      <div class="brand-grid">
        <% recommendedBrands.forEach(brand=> { %>
          <div class="brand-card">
            <img src="<%= brand.logo %>" alt="<%= brand.name %>">
            <h4>
              <%= brand.name %>
            </h4>
            <p>
              <%= brand.industry %>
            </p>
            <a href="/brand/<%= brand._id %>" class="view-btn">View Profile</a>
            <button class="collab-btn" data-brand="<%= brand._id %>">Start Collab</button>
          </div>
          <% }); %>
      </div>
    </section>

    <!-- Footer -->
    <footer>
      <p>&copy; 2025 CollabSync. All rights reserved.</p>
    </footer>

    <!-- This script handles the sidebar toggle. -->
    <script>
      // Notification dropdown toggle
      document.getElementById('notificationBtn').addEventListener('click', function (e) {
        e.preventDefault();
        const dropdown = document.getElementById('notificationDropdown');
        dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';

        // Mark notifications as read when dropdown is opened
        if (dropdown.style.display === 'block') {
          fetch('/influencer/notifications/mark-as-read', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          }).then(response => {
            if (response.ok) {
              // Update badge count
              const badge = document.querySelector('.notification-badge');
              if (badge) badge.style.display = 'none';
            }
          });
        }
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', function (e) {
        if (!e.target.closest('.notification-icon')) {
          document.getElementById('notificationDropdown').style.display = 'none';
        }
      });

      // Initialize charts with safe data handling
      document.addEventListener('DOMContentLoaded', function () {
        const initChart = (id, config) => {
          const ctx = document.getElementById(id)?.getContext('2d');
          return ctx ? new Chart(ctx, config) : null;
        };

        // Engagement Chart
        initChart('engagementChart', {
          type: 'line',
          data: {
            labels: <% - JSON.stringify(analytics?.months || []) %>,
            datasets: [{
              label: 'Engagement Rate',
              data: <% - JSON.stringify(analytics?.engagementRates || []) %>,
              borderColor: 'rgba(75, 192, 192, 1)',
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              tension: 0.3,
              fill: true
            }]
          },
          options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Follower Chart
        const followerCtx = document.getElementById('followerChart').getContext('2d');
        new Chart(followerCtx, {
          type: 'bar',
          data: {
            labels: <%= JSON.stringify(analytics.months) %>,
            datasets: [{
              label: 'New Followers',
              data: <%= JSON.stringify(analytics.newFollowers) %>,
              backgroundColor: 'rgba(54, 162, 235, 0.5)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });

        // Collaboration Performance Chart
        const collabPerfCtx = document.getElementById('collabPerformanceChart').getContext('2d');
        new Chart(collabPerfCtx, {
          type: 'radar',
          data: {
            labels: ['Engagement', 'Reach', 'Conversions', 'Content Quality', 'Timeliness'],
            datasets: [{
              label: 'Average Performance',
              data: <%= JSON.stringify(analytics.collabPerformance) %>,
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            scales: {
              r: {
                angleLines: {
                  display: true
                },
                suggestedMin: 0,
                suggestedMax: 100
              }
            }
          }
        });

        // Earnings Chart
        const earningsCtx = document.getElementById('earningsChart').getContext('2d');
        new Chart(earningsCtx, {
          type: 'doughnut',
          data: {
            labels: <%= JSON.stringify(analytics.earningsBySource.labels) %>,
            datasets: [{
              data: <%= JSON.stringify(analytics.earningsBySource.data) %>,
              backgroundColor: [
                'rgba(255, 99, 132, 0.7)',
                'rgba(54, 162, 235, 0.7)',
                'rgba(255, 206, 86, 0.7)',
                'rgba(75, 192, 192, 0.7)',
                'rgba(153, 102, 255, 0.7)'
              ],
              borderWidth: 1
            }]
          },
          options: {
            responsive: true
          }
        });
      });

      // Sidebar toggle functions
      function openMenu() {
        document.getElementById("navMenu").style.width = "250px";
      }
      function closeMenu() {
        document.getElementById("navMenu").style.width = "0";
      }
    </script>
</body>

</html>