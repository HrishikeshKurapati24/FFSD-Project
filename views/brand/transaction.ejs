<!-- location: project/views/brand/B2_trasationp.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brand to Influencer Payment</title>
    <link rel="stylesheet" href="/B2_index/transaction.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
</head>

<body>

    <!-- Header -->
    <header>
        <div class="header-container">
            <div class="logo">CollabSync</div>
            <nav>
                <ul>
                    <li><a href="/brand/home">Home</a></li>
                    <li><a href="/brand/explore">Explore Influencers</a></li>
                    <li><a href="/brand/profile">My Brand Profile</a></li>
                    <!-- <li><a href="logout">Logout</a></li> -->
                </ul>
            </nav>
        </div>
    </header>

    <!-- Sidebar Navigation (Right Side) -->
    <button class="toggle-btn" onclick="openMenu()">â˜°</button>
    <div class="menu" id="navMenu">
        <span class="close-btn" onclick="closeMenu()">&times;</span>
        <!-- <a href="/I_explore">Brands</a> //////////////////////////////////////////////////////////////////////////////////////////////////////-->
        <a href="/brand/recievedRequests">Collab requests</a>
        <a href="/brand/create_collab">Create Collab</a>
        <a href="/brand/signout">Sign Out</a>
        <!-- <a href="#">Settings</a> -->
    </div>


    <div class="container">
        <!-- Success Message Alert -->
        <% if (typeof successMessage !=='undefined' && successMessage) { %>
            <div class="alert alert-success" id="successAlert">
                <i class="fas fa-check-circle"></i>
                <%= successMessage %>
                    <button type="button" class="close-alert" onclick="closeAlert()">&times;</button>
            </div>
            <% } %>

                <!-- Campaign Section -->
                <div class="campaign-section">
                    <h1>
                        <%= campaignTitle %>
                    </h1>
                    <p class="description">
                        <%= campaignDescription %>
                    </p>
                    <div class="campaign-details">
                        <div class="detail-item">
                            <i class="fas fa-calendar"></i>
                            <span>Duration: <%= campaignDuration %></span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-dollar-sign"></i>
                            <span>Budget(in $): <%= campaignBudget %></span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-users"></i>
                            <span>Target Audience: <%= campaignTargetAudience %></span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-chart-line"></i>
                            <span>Min Followers: <%= campaignMinFollowers.toLocaleString() %></span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-calendar-alt"></i>
                            <span>Start Date: <%= campaignStartDate %></span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-calendar-check"></i>
                            <span>End Date: <%= campaignEndDate %></span>
                        </div>
                    </div>
                    <div class="required-channels">
                        <h3>Required Channels:</h3>
                        <div class="channel-badges">
                            <% if (campaignRequiredChannels && campaignRequiredChannels.length> 0) { %>
                                <% campaignRequiredChannels.forEach(channel=> { %>
                                    <span class="channel-badge">
                                        <%= channel %>
                                    </span>
                                    <% }); %>
                                        <% } else { %>
                                            <span class="no-channels">No specific channels required</span>
                                            <% } %>
                        </div>
                    </div>
                    <div class="objectives">
                        <h3>Campaign Objectives:</h3>
                        <p>
                            <%= campaignObjectives %>
                        </p>
                    </div>
                </div>

                <!-- Campaign Products Section -->
                <% if (campaignProducts && campaignProducts.length> 0) { %>
                    <div class="products-section">
                        <h2><i class="fas fa-shopping-bag"></i> Campaign Products</h2>
                        <div class="products-grid">
                            <% campaignProducts.forEach(product=> { %>
                                <div class="product-item">
                                    <div class="product-image">
                                        <% if (product.image_url) { %>
                                            <img src="<%= product.image_url %>" alt="<%= product.name %>"
                                                class="product-img">
                                            <% } else { %>
                                                <div class="product-placeholder">
                                                    <i class="fas fa-image"></i>
                                                </div>
                                                <% } %>
                                    </div>
                                    <div class="product-details">
                                        <h3 class="product-name">
                                            <%= product.name %>
                                        </h3>
                                        <div class="product-pricing">
                                            <span class="campaign-price">$<%= product.campaign_price.toLocaleString() %>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>
                        </div>
                    </div>
                    <% } %>

                        <!-- Influencer Section -->
                        <div class="influencer-section">
                            <img src="<%= influencerImage %>" alt="Influencer Profile" class="influencer-pic">
                            <div class="influencer-details">
                                <h2>
                                    <%= influencerName %>
                                </h2>
                                <p>Username: <span class="username">@<%= influencerUsername %></span></p>
                                <p>
                                    <%= socialPlatform %>: <span class="social-handle">@<%= socialHandle %></span>
                                </p>
                                <p>Status: <span class="status <%= isVerified ? 'verified' : 'unverified' %>">
                                        <%= isVerified ? 'Verified' : 'Unverified' %>
                                    </span></p>
                            </div>
                        </div>

                        <!-- Payment Form -->
                        <section class="payment-section">
                            <h3>Make Payment</h3>
                            <form id="paymentForm" method="POST" enctype="multipart/form-data"
                                action="/brand/<%= requestId1 %>/<%= requestId2 %>/transaction" novalidate>

                                <% if (typeof allowComplete !=='undefined' && allowComplete) { %>
                                    <!-- Campaign Completion Form (only when influencer-invite) -->
                                    <div class="campaign-section" style="margin-bottom: 30px;">
                                        <h3>Complete Campaign Details</h3>
                                        <p class="section-description">Please complete the campaign details before
                                            proceeding
                                            with payment.</p>

                                        <div class="form-group">
                                            <label for="objectives">Campaign Objectives *</label>
                                            <textarea id="objectives" name="objectives" rows="4"
                                                placeholder="e.g., Increase brand awareness, Drive sales, Promote new product launch, Build community engagement"
                                                required></textarea>
                                        </div>

                                        <div class="form-row">
                                            <div class="form-group">
                                                <label for="startDate">Start Date *</label>
                                                <input type="date" id="startDate" name="startDate" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="endDate">End Date *</label>
                                                <input type="date" id="endDate" name="endDate" required>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label for="targetAudience">Target Audience *</label>
                                            <input type="text" id="targetAudience" name="targetAudience"
                                                placeholder="e.g., Young Adults, 18-35, interested in fashion" required>
                                        </div>
                                    </div>

                                    <!-- Minimal Product Details Form -->
                                    <div class="campaign-section" style="margin-bottom: 30px;">
                                        <h3>Add Product Details</h3>
                                        <p class="section-description">Provide at least one product to launch this
                                            collaboration.</p>
                                        <div class="form-group">
                                            <label for="prodName">Product Name *</label>
                                            <input type="text" id="prodName" name="prodName"
                                                placeholder="e.g., Eco-Friendly Tote Bag" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="prodDescription">Product Description *</label>
                                            <textarea id="prodDescription" name="prodDescription" rows="3"
                                                placeholder="Brief description of the product" required></textarea>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group">
                                                <label for="originalPrice">Original Price ($) *</label>
                                                <input type="number" id="originalPrice" name="originalPrice" step="0.01"
                                                    min="0" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="campaignPrice">Campaign Price ($) *</label>
                                                <input type="number" id="campaignPrice" name="campaignPrice" step="0.01"
                                                    min="0" required>
                                            </div>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group">
                                                <label for="category">Category *</label>
                                                <input type="text" id="category" name="category"
                                                    placeholder="e.g., Accessories" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="targetQty">Target Quantity *</label>
                                                <input type="number" id="targetQty" name="targetQty" min="0" step="1"
                                                    required>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="productImage">Product Image *</label>
                                            <input type="file" id="productImage" name="productImage" accept="image/*"
                                                required>
                                            <small class="form-text text-muted">Upload a high-quality image of your
                                                product</small>
                                        </div>
                                    </div>
                                    <% } %>
                                        <div class="form-group">
                                            <label for="amount">Amount (USD)</label>
                                            <input type="number" id="amount" name="amount" step="0.01" min="1"
                                                max="<%= paymentMax || 0 %>"
                                                placeholder="Up to <%= paymentMax || '0' %>" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="paymentMethod">Payment Method</label>
                                            <select id="paymentMethod" name="paymentMethod" required>
                                                <option value="" disabled selected>Select payment method</option>
                                                <option value="creditCard">Credit Card</option>
                                                <option value="bankTransfer">Bank Transfer</option>
                                            </select>
                                        </div>
                                        <!-- Credit Card Fields -->
                                        <div id="creditCardFields" style="display: none;">
                                            <div class="form-group">
                                                <label for="cardNumber">Card Number</label>
                                                <input type="text" id="cardNumber" name="cardNumber"
                                                    placeholder="1234 5678 9012 3456" maxlength="19">
                                            </div>
                                            <div class="form-group">
                                                <label for="expiryDate">Expiry Date</label>
                                                <input type="text" id="expiryDate" name="expiryDate" placeholder="MM/YY"
                                                    maxlength="5">
                                            </div>
                                            <div class="form-group">
                                                <label for="cvv">CVV</label>
                                                <input type="text" id="cvv" name="cvv" placeholder="123" maxlength="4">
                                            </div>
                                            <div class="form-group">
                                                <label for="cardHolder">Cardholder Name</label>
                                                <input type="text" id="cardHolder" name="cardHolder"
                                                    placeholder="<%= influencerName %>">
                                            </div>
                                        </div>
                                        <!-- Bank Transfer Fields -->
                                        <div id="bankTransferFields" style="display: none;">
                                            <div class="form-group">
                                                <label for="accountNumber">Account Number</label>
                                                <input type="text" id="accountNumber" name="accountNumber"
                                                    placeholder="1234567890">
                                            </div>
                                            <div class="form-group">
                                                <label for="routingNumber">Routing Number</label>
                                                <input type="text" id="routingNumber" name="routingNumber"
                                                    placeholder="021000021">
                                            </div>
                                            <div class="form-group">
                                                <label for="bankName">Bank Name</label>
                                                <input type="text" id="bankName" name="bankName"
                                                    placeholder="Example Bank">
                                            </div>
                                        </div>
                                        <button type="submit">Submit Payment</button>
                            </form>
                        </section>

                        <!-- Hidden input for allowComplete flag -->
                        <% if (typeof allowComplete !=='undefined' && allowComplete) { %>
                            <input type="hidden" id="allowCompleteFlag" value="true">
                            <% } else { %>
                                <input type="hidden" id="allowCompleteFlag" value="false">
                                <% } %>

                                    <script>
                                        // Load Poppins font
                                        const link = document.createElement('link');
                                        link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap';
                                        link.rel = 'stylesheet';
                                        document.head.appendChild(link);

                                        // Error message functions (similar to create collab page)
                                        function getOrCreateErrorEl(targetEl, idSuffix = 'error') {
                                            const id = targetEl.id ? `${targetEl.id}-${idSuffix}` : `${idSuffix}`;
                                            let el = document.getElementById(id);
                                            if (!el) {
                                                el = document.createElement('small');
                                                el.id = id;
                                                el.className = 'form-text error-inline';
                                                el.setAttribute('aria-live', 'polite');
                                                if (targetEl.parentElement) {
                                                    targetEl.parentElement.appendChild(el);
                                                } else if (targetEl.appendChild) {
                                                    targetEl.appendChild(el);
                                                }
                                            }
                                            return el;
                                        }

                                        function setError(targetEl, message, idSuffix = 'error') {
                                            const el = getOrCreateErrorEl(targetEl, idSuffix);
                                            el.textContent = message || '';
                                            if (message) {
                                                targetEl.setAttribute('aria-invalid', 'true');
                                                el.style.display = 'block';
                                                el.style.marginTop = '6px';
                                                el.style.padding = '6px 8px';
                                                el.style.borderRadius = '4px';
                                                el.style.background = 'rgba(255, 77, 79, 0.12)';
                                                el.style.border = '1px solid #ff4d4f';
                                                el.style.color = '#b00020';
                                                if (targetEl.tagName === 'INPUT' || targetEl.tagName === 'TEXTAREA' || targetEl.tagName === 'SELECT') {
                                                    targetEl.style.outline = '2px solid #ff4d4f';
                                                    targetEl.style.outlineOffset = '1px';
                                                }
                                            } else {
                                                targetEl.removeAttribute('aria-invalid');
                                                el.style.display = '';
                                                el.style.padding = '';
                                                el.style.border = '';
                                                el.style.background = '';
                                                el.style.color = '';
                                                el.style.borderRadius = '';
                                                if (targetEl.tagName === 'INPUT' || targetEl.tagName === 'TEXTAREA' || targetEl.tagName === 'SELECT') {
                                                    targetEl.style.outline = '';
                                                    targetEl.style.outlineOffset = '';
                                                }
                                            }
                                            return Boolean(message);
                                        }

                                        function clearAllErrors() {
                                            const inputs = document.querySelectorAll('#paymentForm input, #paymentForm textarea, #paymentForm select');
                                            inputs.forEach(el => setError(el, ''));
                                        }

                                        // Function to close alert
                                        function closeAlert() {
                                            const alert = document.getElementById('successAlert');
                                            if (alert) {
                                                alert.style.display = 'none';
                                            }
                                        }

                                        // Auto-hide success alert after 5 seconds
                                        const successAlert = document.getElementById('successAlert');
                                        if (successAlert) {
                                            setTimeout(() => {
                                                successAlert.style.display = 'none';
                                            }, 5000);
                                        }

                                        // JavaScript for interactivity
                                        const paymentMethodSelect = document.getElementById('paymentMethod');
                                        const creditCardFields = document.getElementById('creditCardFields');
                                        const bankTransferFields = document.getElementById('bankTransferFields');
                                        const paymentForm = document.getElementById('paymentForm');


                                        // Toggle payment fields based on method
                                        paymentMethodSelect.addEventListener('change', function () {
                                            creditCardFields.style.display = this.value === 'creditCard' ? 'block' : 'none';
                                            bankTransferFields.style.display = this.value === 'bankTransfer' ? 'block' : 'none';
                                        });

                                        // Form submission handling
                                        paymentForm.addEventListener('submit', function (event) {
                                            event.preventDefault();

                                            // Clear all previous errors
                                            clearAllErrors();

                                            // Collect form data
                                            const amount = document.getElementById('amount').value;
                                            const paymentMethod = paymentMethodSelect.value;
                                            let isValid = true;

                                            // Campaign & product validation only when allowComplete=true
                                            const allowComplete = document.getElementById('allowCompleteFlag').value === 'true';
                                            if (allowComplete) {
                                                // Only collect campaign fields if they exist (allowComplete=true)
                                                const objectivesElement = document.getElementById('objectives');
                                                const startDateElement = document.getElementById('startDate');
                                                const endDateElement = document.getElementById('endDate');
                                                const targetAudienceElement = document.getElementById('targetAudience');

                                                const objectives = objectivesElement ? objectivesElement.value : '';
                                                const startDate = startDateElement ? startDateElement.value : '';
                                                const endDate = endDateElement ? endDateElement.value : '';
                                                const targetAudience = targetAudienceElement ? targetAudienceElement.value : '';

                                                if (!objectives || objectives.trim().length < 10) {
                                                    setError(objectivesElement, 'Please enter detailed campaign objectives (at least 10 characters).');
                                                    isValid = false;
                                                }

                                                if (!startDate) {
                                                    setError(startDateElement, 'Please select a start date.');
                                                    isValid = false;
                                                }

                                                if (!endDate) {
                                                    setError(endDateElement, 'Please select an end date.');
                                                    isValid = false;
                                                }

                                                if (startDate && endDate) {
                                                    const start = new Date(startDate);
                                                    const end = new Date(endDate);
                                                    const today = new Date();
                                                    today.setHours(0, 0, 0, 0);

                                                    if (start < today) {
                                                        setError(startDateElement, 'Start date cannot be in the past.');
                                                        isValid = false;
                                                    }

                                                    if (end <= start) {
                                                        setError(endDateElement, 'End date must be after start date.');
                                                        isValid = false;
                                                    }

                                                    const duration = Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1;
                                                    if (duration > 365) {
                                                        setError(endDateElement, 'Campaign duration cannot exceed 365 days.');
                                                        isValid = false;
                                                    }
                                                }

                                                if (!targetAudience || targetAudience.trim().length < 5) {
                                                    setError(targetAudienceElement, 'Please enter a detailed target audience (at least 5 characters).');
                                                    isValid = false;
                                                }

                                                // Product validation (minimal required fields)
                                                const prodNameElement = document.getElementById('prodName');
                                                const prodDescriptionElement = document.getElementById('prodDescription');
                                                const originalPriceElement = document.getElementById('originalPrice');
                                                const campaignPriceElement = document.getElementById('campaignPrice');
                                                const categoryElement = document.getElementById('category');
                                                const targetQtyElement = document.getElementById('targetQty');
                                                const productImageElement = document.getElementById('productImage');

                                                const prodName = prodNameElement ? prodNameElement.value.trim() : '';
                                                const prodDescription = prodDescriptionElement ? prodDescriptionElement.value.trim() : '';
                                                const originalPrice = originalPriceElement ? parseFloat(originalPriceElement.value) : 0;
                                                const campaignPrice = campaignPriceElement ? parseFloat(campaignPriceElement.value) : 0;
                                                const category = categoryElement ? categoryElement.value.trim() : '';
                                                const targetQty = targetQtyElement ? parseInt(targetQtyElement.value, 10) : 0;
                                                const productImage = productImageElement ? productImageElement.files[0] : null;

                                                if (!prodName) { setError(prodNameElement, 'Product name is required.'); isValid = false; }
                                                if (!prodDescription) { setError(prodDescriptionElement, 'Product description is required.'); isValid = false; }
                                                if (!Number.isFinite(originalPrice) || originalPrice < 0) { setError(originalPriceElement, 'Original price must be >= 0.'); isValid = false; }
                                                if (!Number.isFinite(campaignPrice) || campaignPrice < 0) { setError(campaignPriceElement, 'Campaign price must be >= 0.'); isValid = false; }
                                                if (Number.isFinite(originalPrice) && Number.isFinite(campaignPrice) && campaignPrice > originalPrice) { setError(campaignPriceElement, 'Campaign price cannot exceed original price.'); isValid = false; }
                                                if (!category) { setError(categoryElement, 'Product category is required.'); isValid = false; }
                                                if (!Number.isInteger(targetQty) || targetQty < 0) { setError(targetQtyElement, 'Target quantity must be a non-negative integer.'); isValid = false; }
                                                if (!productImage) { setError(productImageElement, 'Product image is required.'); isValid = false; }
                                            }

                                            // Payment validation
                                            const amountElement = document.getElementById('amount');
                                            const paymentMethodElement = paymentMethodSelect;

                                            if (!amount || amount <= 0) {
                                                setError(amountElement, 'Please enter a valid amount.');
                                                isValid = false;
                                            }

                                            // Enforce remaining budget client-side
                                            const max = Number(amountElement.getAttribute('max') || 0);
                                            if (max && Number(amount) > max) {
                                                setError(amountElement, `Amount exceeds remaining budget (max ${max}).`);
                                                isValid = false;
                                            }

                                            if (!paymentMethod) {
                                                setError(paymentMethodElement, 'Please select a payment method.');
                                                isValid = false;
                                            }

                                            if (paymentMethod === 'creditCard') {
                                                const cardNumber = document.getElementById('cardNumber');
                                                const expiryDate = document.getElementById('expiryDate');
                                                const cvv = document.getElementById('cvv');
                                                const cardHolder = document.getElementById('cardHolder');

                                                if (!cardNumber.value || cardNumber.value.length < 16) {
                                                    setError(cardNumber, 'Please enter a valid card number (min 16 digits).');
                                                    isValid = false;
                                                }
                                                if (!expiryDate.value || !/^\d{2}\/\d{2}$/.test(expiryDate.value)) {
                                                    setError(expiryDate, 'Please enter a valid expiry date (MM/YY).');
                                                    isValid = false;
                                                }
                                                if (!cvv.value || cvv.value.length < 3) {
                                                    setError(cvv, 'Please enter a valid CVV (3-4 digits).');
                                                    isValid = false;
                                                }
                                                if (!cardHolder.value) {
                                                    setError(cardHolder, 'Please enter the cardholder name.');
                                                    isValid = false;
                                                }
                                            } else if (paymentMethod === 'bankTransfer') {
                                                const accountNumber = document.getElementById('accountNumber');
                                                const routingNumber = document.getElementById('routingNumber');
                                                const bankName = document.getElementById('bankName');

                                                if (!accountNumber.value) {
                                                    setError(accountNumber, 'Please enter an account number.');
                                                    isValid = false;
                                                }
                                                if (!routingNumber.value) {
                                                    setError(routingNumber, 'Please enter a routing number.');
                                                    isValid = false;
                                                }
                                                if (!bankName.value) {
                                                    setError(bankName, 'Please enter a bank name.');
                                                    isValid = false;
                                                }
                                            }

                                            // Submit form if valid
                                            if (isValid) {
                                                this.submit();
                                            } else {
                                                // Scroll to first error
                                                const firstError = document.querySelector('[aria-invalid="true"]');
                                                if (firstError) {
                                                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                                                }
                                            }
                                        });

                                        //nav bar
                                        function openMenu() {
                                            document.getElementById("navMenu").style.width = "250px";
                                        }
                                        function closeMenu() {
                                            document.getElementById("navMenu").style.width = "0";
                                        }
                                    </script>
</body>

</html>