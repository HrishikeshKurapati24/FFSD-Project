<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Brand Dashboard - CollabSync</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <!-- Add Bootstrap CSS and JS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="/B2_index/B2_index.css">

  <style>
    :root {
      --primary-color: #4285f4;
      --secondary-color: #34a853;
      --accent-color: #ea4335;
      --light-gray: #f8f9fa;
      --dark-gray: #333;
    }

    .dashboard-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 20px;
      margin: 20px 0;
    }

    .dashboard-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
    }

    .dashboard-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .metric-value {
      font-size: 28px;
      font-weight: 700;
      color: var(--primary-color);
      margin: 10px 0;
    }

    .metric-label {
      color: #666;
      font-size: 14px;
    }

    .trend-indicator {
      display: flex;
      align-items: center;
      font-size: 14px;
      margin-top: 5px;
    }

    .trend-up {
      color: var(--secondary-color);
    }

    .trend-down {
      color: var(--accent-color);
    }

    .campaign-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 25px;
      margin: 20px 0;
      padding: 20px;
    }

    .campaign-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 15px;
      min-height: 400px;
    }

    .campaign-status {
      position: absolute;
      top: 15px;
      right: 15px;
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 500;
      z-index: 1;
    }

    .status-active {
      background: #e6f4ea;
      color: var(--secondary-color);
    }

    .status-upcoming {
      background: #e8f0fe;
      color: var(--primary-color);
    }

    .campaign-card h3 {
      margin-top: 10px;
      margin-bottom: 10px;
      font-size: 18px;
      color: var(--dark-gray);
    }

    .campaign-card p {
      margin: 0;
      color: #666;
      line-height: 1.4;
      flex-grow: 0;
    }

    .progress-container {
      margin: 15px 0;
      flex-grow: 0;
    }

    .progress-info {
      display: flex;
      justify-content: space-between;
      margin-bottom: 5px;
      font-size: 12px;
    }

    .progress-bar {
      height: 8px;
      background: #e0e0e0;
      border-radius: 4px;
      overflow: hidden;
    }

    .progress-fill {
      height: 100%;
      background: var(--primary-color);
      border-radius: 4px;
    }

    .notification-badge {
      position: absolute;
      top: -5px;
      right: -5px;
      background-color: var(--accent-color);
      color: white;
      border-radius: 50%;
      padding: 2px 6px;
      font-size: 12px;
    }

    .notification-dropdown {
      position: absolute;
      right: 0;
      top: 100%;
      background: white;
      width: 350px;
      max-height: 400px;
      overflow-y: auto;
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      z-index: 100;
      display: none;
    }

    .notification-item {
      padding: 12px 15px;
      border-bottom: 1px solid #eee;
    }

    .notification-item.unread {
      background: var(--light-gray);
    }

    .notification-time {
      font-size: 12px;
      color: #777;
      margin-top: 5px;
    }

    .quick-actions {
      display: flex;
      gap: 15px;
      margin: 25px 0;
    }

    .action-btn {
      margin-top: auto;
      width: 100%;
      text-align: center;
      padding: 12px;
    }

    .top-influencers {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
      margin: 30px 0;
      padding: 20px;
      background: var(--light-gray);
      border-radius: 12px;
    }

    .influencer-card {
      background: #fff;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease;
    }

    .influencer-card:hover {
      transform: translateY(-5px);
    }

    .influencer-avatar {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      object-fit: cover;
      margin-bottom: 15px;
    }

    .influencer-name {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 5px;
    }

    .influencer-username {
      color: #666;
      font-size: 0.9rem;
      margin-bottom: 15px;
    }

    .influencer-categories {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-bottom: 15px;
    }

    .category-tag {
      background: #e9ecef;
      color: #495057;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 0.8rem;
    }

    .match-info {
      background: #f8f9fa;
      border-radius: 6px;
      padding: 12px;
      margin-bottom: 15px;
    }

    .match-percentage {
      text-align: center;
      margin-bottom: 8px;
    }

    .percentage-value {
      font-size: 1.5rem;
      font-weight: 600;
      color: #007BFF;
    }

    .percentage-label {
      display: block;
      font-size: 0.8rem;
      color: #666;
    }

    .match-details {
      display: flex;
      flex-direction: column;
      gap: 4px;
      font-size: 0.9rem;
      color: #666;
    }

    .matching-categories {
      color: #28a745;
    }

    .campaign-count {
      color: #6c757d;
    }

    .influencer-stats {
      display: flex;
      justify-content: space-around;
      margin: 15px 0;
    }

    .stat-item {
      text-align: center;
    }

    .stat-value {
      display: block;
      font-size: 1.1rem;
      font-weight: 600;
      color: #333;
    }

    .stat-label {
      font-size: 0.8rem;
      color: #666;
    }

    .view-profile-btn {
      display: block;
      text-align: center;
      background: #007BFF;
      color: white;
      padding: 8px 16px;
      border-radius: 4px;
      text-decoration: none;
      transition: background-color 0.3s ease;
    }

    .view-profile-btn:hover {
      background: #0056b3;
    }

    .campaign-performance {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;
      margin: 15px 0;
      padding: 15px;
      background: var(--light-gray);
      border-radius: 8px;
      flex-grow: 0;
    }

    .performance-metric {
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 8px;
      background: white;
      border-radius: 6px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .performance-metric i {
      font-size: 20px;
      color: var(--primary-color);
    }

    .performance-metric .metric-value {
      font-size: 16px;
      font-weight: 600;
      color: var(--dark-gray);
    }

    .performance-metric .metric-label {
      font-size: 12px;
      color: #666;
    }

    .campaign-meta {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;
      margin-top: auto;
      padding-top: 15px;
      border-top: 1px solid #eee;
    }

    .meta-item {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 12px;
      color: #666;
    }

    .meta-item i {
      color: var(--primary-color);
    }

    .section-header {
      font-size: 24px;
      font-weight: 600;
      color: var(--dark-gray);
      margin: 30px 0 20px;
      padding-bottom: 10px;
      border-bottom: 2px solid var(--primary-color);
    }

    .campaign-requests-section {
      margin: 40px 0;
    }

    .campaign-requests-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 25px;
      margin: 20px 0;
    }

    .campaign-request-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
    }

    .campaign-request-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .request-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }

    .request-header h3 {
      margin: 0;
      font-size: 18px;
      color: var(--dark-gray);
    }

    .request-status {
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 500;
    }

    .request-status.request {
      background: #e8f0fe;
      color: var(--primary-color);
    }

    .request-status.active {
      background: #e6f4ea;
      color: var(--secondary-color);
    }

    .request-description {
      color: #666;
      margin-bottom: 15px;
      line-height: 1.4;
    }

    .request-details {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;
      margin: 15px 0;
      padding: 15px;
      background: var(--light-gray);
      border-radius: 8px;
    }

    .detail-item {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 12px;
      color: #666;
    }

    .detail-item i {
      color: var(--primary-color);
    }

    .request-actions {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    .btn-activate,
    .btn-view {
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .btn-activate {
      background: var(--primary-color);
      color: white;
    }

    .btn-activate:hover {
      background: #3367d6;
    }

    .btn-view {
      background: var(--light-gray);
      color: var(--dark-gray);
    }

    .btn-view:hover {
      background: #e0e0e0;
    }

    .no-requests {
      text-align: center;
      padding: 40px;
      background: var(--light-gray);
      border-radius: 10px;
      color: #666;
    }

    .modal-content {
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
      background: var(--primary-color);
      color: white;
      border-radius: 12px 12px 0 0;
    }

    .modal-title {
      font-weight: 600;
    }

    .campaign-details-content {
      padding: 20px;
    }

    .detail-section {
      margin-bottom: 25px;
    }

    .detail-section h6 {
      color: var(--primary-color);
      margin-bottom: 15px;
      font-weight: 600;
    }

    .detail-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }

    .influencers-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 15px;
      margin-top: 15px;
    }

    .influencer-card {
      background: var(--light-gray);
      padding: 15px;
      border-radius: 8px;
      text-align: center;
    }

    .influencer-avatar {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      margin-bottom: 10px;
    }

    .influencer-name {
      font-weight: 600;
      margin-bottom: 5px;
    }

    .influencer-stats {
      font-size: 12px;
      color: #666;
    }
  </style>
</head>

<body>
  <!-- Header -->
  <header>
    <div class="header-container">
      <div class="logo">CollabSync</div>
      <nav>
        <ul>
          <li><a href="/brand/home">Home</a></li>
          <li><a href="/brand/explore">Explore Influencers</a></li>
          <li><a href="/brand/profile">My Brand Profile</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- Add this right after the header section -->
  <% if (typeof successMessage !=='undefined' && successMessage) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert"
      style="position: fixed; top: 20px; right: 20px; z-index: 1000; min-width: 300px;">
      <%= successMessage %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <script>
      // Auto-hide the alert after 5 seconds
      setTimeout(function () {
        const alert = document.querySelector('.alert');
        if (alert) {
          alert.classList.remove('show');
          setTimeout(() => alert.remove(), 150);
        }
      }, 5000);
    </script>
    <% } %>

      <!-- Sidebar Navigation -->
      <button class="toggle-btn" onclick="openMenu()">☰</button>
      <div class="menu" id="navMenu">
        <span class="close-btn" onclick="closeMenu()">&times;</span>
        <a href="/brand/collab">Collabs</a>
        <a href="/brand/recievedRequests">Collab Requests</a>
        <a href="/brand/create_collab">Create Collab</a>
        <a href="/brand/create_offer">Create Offer</a>
        <a href="/brand/signout">Sign Out</a>
      </div>

      <!-- Main Content -->
      <div class="container">
        <!-- Welcome Section -->
        <div class="intro">
          <h1>Welcome, <%= brand.name %>
          </h1>
          <p>Powerful tools and real-time analytics to manage campaigns and grow your business.</p>

          <!-- Performance Overview -->
          <section class="dashboard">
            <h2 class="section-header">Performance Overview</h2>
            <div class="dashboard-container">
              <div class="dashboard-card">
                <h3>Active Campaigns</h3>
                <div class="metric-value">
                  <%= stats.activeCampaigns %>
                </div>
                <div class="metric-label">Total running campaigns</div>
                <div class="trend-indicator trend-up">
                  <i class="fas fa-arrow-up"></i>
                  <%= stats.campaignGrowth %>% from last month
                </div>
              </div>

              <div class="dashboard-card">
                <h3>Engagement Rate</h3>
                <div class="metric-value">
                  <%= stats.avgEngagement.toFixed(1) %>%
                </div>
                <div class="metric-label">Average across campaigns</div>
                <div class="trend-indicator <%= stats.engagementTrend >= 0 ? 'trend-up' : 'trend-down' %>">
                  <% if (stats.engagementTrend>= 0) { %>
                    <i class="fas fa-arrow-up"></i>
                    <% } else { %>
                      <i class="fas fa-arrow-down"></i>
                      <% } %>
                        <%= Math.abs(stats.engagementTrend) %>% change
                </div>
              </div>

              <div class="dashboard-card">
                <h3>Total Reach</h3>
                <div class="metric-value">
                  <%= stats.totalReach.toLocaleString() %>
                </div>
                <div class="metric-label">Potential audience reached</div>
                <div class="trend-indicator trend-up">
                  <i class="fas fa-arrow-up"></i>
                  <%= stats.reachGrowth %>% growth
                </div>
              </div>

              <div class="dashboard-card">
                <h3>ROI</h3>
                <div class="metric-value">
                  <%= stats.roi %>%
                </div>
                <div class="metric-label">Return on investment</div>
                <div class="trend-indicator <%= stats.roiTrend >= 0 ? 'trend-up' : 'trend-down' %>">
                  <% if (stats.roiTrend>= 0) { %>
                    <i class="fas fa-arrow-up"></i>
                    <% } else { %>
                      <i class="fas fa-arrow-down"></i>
                      <% } %>
                        <%= Math.abs(stats.roiTrend) %>% change
                </div>
              </div>
            </div>
          </section>

          <!-- Active Campaigns Section -->
          <section class="campaigns-section">
            <h2 class="section-header">Active Campaigns</h2>
            <div class="campaign-list">
              <% activeCampaigns.forEach(campaign=> { %>
                <div class="campaign-card">
                  <span
                    class="campaign-status <%= campaign.status === 'active' ? 'status-active' : 'status-upcoming' %>">
                    <%= campaign.status %>
                  </span>
                  <h3>
                    <%= campaign.name %>
                  </h3>
                  <p>
                    <%= campaign.description.substring(0, 80) %>...
                  </p>

                  <!-- Campaign Progress -->
                  <div class="progress-container">
                    <div class="progress-info">
                      <span>Progress</span>
                      <span>
                        <%= campaign.progress %>%
                      </span>
                    </div>
                    <div class="progress-bar">
                      <div class="progress-fill" style="width: <%= campaign.progress %>%"></div>
                    </div>
                  </div>

                  <!-- Campaign Performance -->
                  <div class="campaign-performance">
                    <div class="performance-metric">
                      <i class="fas fa-chart-line"></i>
                      <div>
                        <span class="metric-value">
                          <%= campaign.engagement_rate.toFixed(1) %>%
                        </span>
                        <span class="metric-label">Engagement Rate</span>
                      </div>
                    </div>
                    <div class="performance-metric">
                      <i class="fas fa-users"></i>
                      <div>
                        <span class="metric-value">
                          <%= campaign.reach.toLocaleString() %>
                        </span>
                        <span class="metric-label">Total Reach</span>
                      </div>
                    </div>
                    <div class="performance-metric">
                      <i class="fas fa-shopping-cart"></i>
                      <div>
                        <span class="metric-value">
                          <%= campaign.conversion_rate %>%
                        </span>
                        <span class="metric-label">Conversion Rate</span>
                      </div>
                    </div>
                  </div>

                  <!-- Campaign Details -->
                  <div class="campaign-meta">
                    <div class="meta-item">
                      <i class="far fa-calendar"></i>
                      <span>Ends in <%= campaign.daysRemaining %> days</span>
                    </div>
                    <div class="meta-item">
                      <i class="fas fa-users"></i>
                      <span>
                        <%= campaign.influencersCount %> influencers
                      </span>
                    </div>
                    <div class="meta-item">
                      <i class="fas fa-tag"></i>
                      <span>
                        <%= campaign.budget.toLocaleString() %> budget
                      </span>
                    </div>
                  </div>
                </div>
                <% }); %>
            </div>
          </section>

          <!-- Campaign Requests Section -->
          <section class="campaign-requests-section">
            <h2 class="section-header">Campaign Requests</h2>
            <div class="campaign-requests-list">
              <% if (campaignRequests && campaignRequests.length> 0) { %>
                <% campaignRequests.forEach(request=> { %>
                  <div class="campaign-request-card">
                    <div class="request-header">
                      <h3>
                        <%= request.title %>
                      </h3>
                      <span class="request-status <%= request.status %>">
                        <%= request.status %>
                      </span>
                    </div>
                    <p class="request-description">
                      <%= request.description %>
                    </p>
                    <div class="request-details">
                      <div class="detail-item">
                        <i class="fas fa-calendar"></i>
                        <span>Start: <%= new Date(request.start_date).toLocaleDateString() %></span>
                      </div>
                      <div class="detail-item">
                        <i class="fas fa-clock"></i>
                        <span>Duration: <%= request.duration %> days</span>
                      </div>
                      <div class="detail-item">
                        <i class="fas fa-dollar-sign"></i>
                        <span>Budget: $<%= request.budget %></span>
                      </div>
                      <div class="detail-item">
                        <i class="fas fa-users"></i>
                        <span>Accepted Influencers: <%= request.influencers_count || 0 %></span>
                      </div>
                      <div class="detail-item">
                        <i class="fas fa-bullseye"></i>
                        <span>Target: <%= request.target_audience %></span>
                      </div>
                      <div class="detail-item">
                        <i class="fas fa-hashtag"></i>
                        <span>Min Followers: <%= request.min_followers.toLocaleString() %></span>
                      </div>
                    </div>
                    <div class="request-actions">
                      <% if (request.status==='request' && request._id) { %>
                        <!-- ========================================
                        SECTION 1: DYNAMIC CAMPAIGN ACTIVATION & MODAL MANAGEMENT
                        ======================================== -->
                        <!-- This section dynamically manages campaign activation and modal display:
                      - Activates campaigns via Fetch API calls and updates UI state
                      - Shows/hides success/error alerts dynamically
                      - Manages modal content loading and display
                      - Updates button states and campaign status in real-time -->
                        <button class="btn-activate" onclick="activateCampaign('<%= request._id %>')">
                          Activate Campaign
                        </button>
                        <% } %>
                          <% if (request._id) { %>
                            <button class="btn-view" onclick="viewCampaignDetails('<%= request._id %>')">
                              View Details
                            </button>
                            <% } %>
                    </div>
                  </div>
                  <% }); %>
                    <% } else { %>
                      <div class="no-requests">
                        <p>No campaign requests found.</p>
                      </div>
                      <% } %>
            </div>
          </section>

          <!-- Top Influencers Section -->
          <section class="influencers-section">
            <h2 class="section-header">Influencers You Might Like</h2>
            <div class="top-influencers">
              <% topInfluencers.forEach(influencer=> { %>
                <div class="influencer-card">
                  <img src="<%= influencer.profilePicUrl %>" alt="<%= influencer.name %>" class="influencer-avatar">
                  <h4 class="influencer-name">
                    <%= influencer.name %>
                  </h4>
                  <p class="influencer-username">@<%= influencer.username %>
                  </p>


                  <div class="influencer-categories">
                    <% if (influencer.categories && influencer.categories.length> 0) { %>
                      <% influencer.categories.forEach(category=> { %>
                        <span class="category-tag">
                          <%= category %>
                        </span>
                        <% }); %>
                          <% } %>
                  </div>

                  <div class="match-info">
                    <div class="match-percentage">
                      <span class="percentage-value">
                        <!-- ========================================
                        SECTION 2: DYNAMIC INFLUENCER MATCHING & DISPLAY
                        ======================================== -->
                        <!-- This section dynamically displays influencer recommendations:
                        - Calculates and displays match percentages in real-time
                        - Shows/hides influencer cards based on data availability
                        - Updates category tags and stats dynamically
                        - Manages conditional rendering of influencer information -->
                        <%= Math.round(influencer.categoryMatchPercentage) %>%
                      </span>
                      <span class="percentage-label">Category Match</span>
                    </div>
                    <div class="match-details">
                      <span class="matching-categories">
                        <%= influencer.matchingCategories %> matching categories
                      </span>
                      <% if (influencer.campaignCount> 0) { %>
                        <span class="campaign-count">
                          <%= influencer.campaignCount %> previous campaigns
                        </span>
                        <% } %>
                    </div>
                  </div>

                  <div class="influencer-stats">
                    <div class="stat-item">
                      <span class="stat-value">
                        <%= influencer.avgEngagement.toFixed(1) %>%
                      </span>
                      <span class="stat-label">Engagement</span>
                    </div>
                    <div class="stat-item">
                      <span class="stat-value">
                        <%= influencer.followers.toLocaleString() %>
                      </span>
                      <span class="stat-label">Followers</span>
                    </div>
                  </div>
                  <a href="/brand/influencer_details/<%= influencer._id %>" class="view-profile-btn">View Profile</a>
                </div>
                <% }); %>
            </div>
          </section>

          Campaign History Section
          <section class="campaign-history-section">
            <h2 class="section-header">Campaign History</h2>
            <div class="view-history">
              <p>Check out all our old campaigns!</p>
              <a href="/brand/campaigns/history" class="view-campaigns-btn">View Completed Campaigns</a>
            </div>
          </section>
        </div>
      </div>

      <!-- Add Campaign Details Modal -->
      <div class="modal fade" id="campaignDetailsModal" tabindex="-1" aria-labelledby="campaignDetailsModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="campaignDetailsModalLabel">Campaign Details</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="campaign-details-content">
                <!-- Content will be loaded dynamically -->
              </div>
            </div>
          </div>
        </div>
      </div>

      <script>
        // Initialize all event listeners when the DOM is loaded
        document.addEventListener('DOMContentLoaded', function () {
          // Menu toggle functions
          window.openMenu = function () {
            const menu = document.getElementById("navMenu");
            if (menu) {
              menu.style.width = "250px";
            }
          };

          window.closeMenu = function () {
            const menu = document.getElementById("navMenu");
            if (menu) {
              menu.style.width = "0";
            }
          };

          // Close menu when clicking outside
          document.addEventListener('click', function (e) {
            const menu = document.getElementById('navMenu');
            const toggleBtn = document.querySelector('.toggle-btn');
            if (menu && toggleBtn && !menu.contains(e.target) && !toggleBtn.contains(e.target)) {
              menu.style.width = "0";
            }
          });
        });

        // ========================================
        // FUNCTIONALITY 2: CAMPAIGN ACTIVATION
        // ========================================
        // Asynchronous campaign activation with dynamic UI feedback
        // - Sends activation request to server via POST
        // - Creates dynamic success alert and appends to DOM
        // - Manages alert visibility with CSS transitions
        // - Auto-removes alert after timeout
        // - Reloads page to reflect updated campaign state
        async function activateCampaign(campaignId) {
          try {
            const response = await fetch(`/brand/campaigns/${campaignId}/activate`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              }
            });

            if (response.ok) {
              // Show success message
              const alert = document.createElement('div');
              alert.className = 'alert alert-success alert-dismissible fade show';
              alert.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 1000; min-width: 300px;';
              alert.innerHTML = `
                Campaign activated successfully!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              `;
              document.body.appendChild(alert);

              // Remove alert after 5 seconds
              setTimeout(() => {
                alert.classList.remove('show');
                setTimeout(() => alert.remove(), 150);
              }, 5000);

              // Reload the page after a short delay
              setTimeout(() => {
                window.location.reload();
              }, 1000);
            } else {
              throw new Error('Failed to activate campaign');
            }
          } catch (error) {
            console.error('Error activating campaign:', error);
            alert('Failed to activate campaign. Please try again.');
          }
        }

        // ========================================
        // FUNCTIONALITY 2: CAMPAIGN DETAILS RETRIEVAL
        // ========================================
        // Asynchronous campaign details retrieval with dynamic modal population
        // - Fetches campaign details from server via GET request
        // - Handles error responses and validation
        // - Dynamically populates modal content with fetched data
        // - Creates Bootstrap modal instances programmatically
        // - Manages conditional content rendering based on data availability
        async function viewCampaignDetails(campaignId) {
          try {
            console.log('Viewing details for campaign:', campaignId);
            if (!campaignId) {
              console.error('No campaign ID provided');
              alert('Invalid campaign ID');
              return;
            }

            const response = await fetch(`/brand/campaigns/${campaignId}/details`);
            if (!response.ok) {
              const errorData = await response.json();
              console.error('Failed to fetch campaign details:', response.status, errorData);
              throw new Error(errorData.error || 'Failed to fetch campaign details');
            }

            const data = await response.json();
            console.log('Campaign details received:', data);
            // ========================================
            // SECTION 3: DYNAMIC MODAL CONTENT POPULATION
            // ======================================== -->
            // This section dynamically populates modal content via Fetch API:
            // - Fetches campaign details asynchronously from server
            // - Builds HTML content dynamically using template literals
            // - Updates modal innerHTML with fetched data
            // - Creates Bootstrap modal instances programmatically
            // - Manages conditional content rendering based on data availability

            // Create the modal content
            const content = `
              <div class="detail-section">
                <h6>Campaign Overview</h6>
                <div class="detail-grid">
                  <div class="detail-item">
                    <i class="fas fa-calendar"></i>
                    <strong>Start Date:</strong> ${new Date(data.start_date).toLocaleDateString()}
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-clock"></i>
                    <strong>Duration:</strong> ${data.duration || 0} days
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-dollar-sign"></i>
                    <strong>Budget:</strong> $${data.budget || 0}
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-users"></i>
                    <strong>Accepted Influencers:</strong> ${data.accepted_influencers || 0}
                  </div>
                </div>
              </div>

              <div class="detail-section">
                <h6>Campaign Details</h6>
                <div class="detail-grid">
                  <div class="detail-item">
                    <i class="fas fa-bullseye"></i>
                    <strong>Target Audience:</strong> ${data.target_audience || 'Not specified'}
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-hashtag"></i>
                    <strong>Min Followers:</strong> ${(data.min_followers || 0).toLocaleString()}
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-list"></i>
                    <strong>Required Channels:</strong> ${(data.required_channels || []).join(', ') || 'Not specified'}
                  </div>
                  <div class="detail-item">
                    <i class="fas fa-bullseye"></i>
                    <strong>Objectives:</strong> ${data.objectives || 'Not specified'}
                  </div>
                </div>
              </div>

              <div class="detail-section">
                <h6>Description</h6>
                <p>${data.description || 'No description available'}</p>
              </div>

              ${data.influencers && data.influencers.length > 0 ? `
                <div class="detail-section">
                  <h6>Accepted Influencers</h6>
                  <div class="influencers-list">
                    ${data.influencers.map(influencer => `
                      <div class="influencer-card">
                        <img src="${influencer.profilePicUrl || '/images/default-avatar.jpg'}" 
                             alt="${influencer.name}" 
                             class="influencer-avatar">
                        <div class="influencer-name">${influencer.name}</div>
                        <div class="influencer-stats">
                          <div>Followers: ${(influencer.followers || 0).toLocaleString()}</div>
                          <div>Engagement: ${(influencer.engagement_rate || 0).toFixed(1)}%</div>
                        </div>
                      </div>
                    `).join('')}
                  </div>
                </div>
              ` : ''}
            `;

            // Update modal content and show it
            document.querySelector('.campaign-details-content').innerHTML = content;

            // Get the modal element
            const modalElement = document.getElementById('campaignDetailsModal');
            if (!modalElement) {
              throw new Error('Modal element not found');
            }

            // Create a new Bootstrap modal instance
            const modal = new bootstrap.Modal(modalElement);

            // Show the modal
            modal.show();
          } catch (error) {
            console.error('Error fetching campaign details:', error);
            alert(error.message || 'Failed to load campaign details. Please try again.');
          }
        }
      </script>
</body>

</html>