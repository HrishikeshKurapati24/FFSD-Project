<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= brand.name %> Profile | CollabSync
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/B2_index/B2_profile2.css">
</head>

<body>
    <!-- Header -->
    <header>
        <div class="header-container">
            <div class="logo">CollabSync</div>
            <nav>
                <ul>
                    <li><a href="/brand/home">Home</a></li>
                    <li><a href="/brand/explore">Explore Influencers</a></li>
                    <li><a href="/brand/profile">My Brand Profile</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Sidebar Navigation -->
    <button class="toggle-btn" onclick="openMenu()">☰</button>
    <div class="menu" id="navMenu">
        <span class="close-btn" onclick="closeMenu()">&times;</span>
        <a href="/brand/collab">Collabs</a>
        <a href="/brand/recievedRequests">Collab requests</a>
        <a href="/brand/create_collab">Create Collab</a>
        <a href="/brand/create_offer">Create Offer</a>
        <a href="/brand/signout">Sign Out</a>
    </div>

    <div class="container">
        <!-- Profile Banner -->
        <section class="profile-banner">
            <div class="banner-image" style="background-image: url('<%= brand.bannerUrl || " /images/default-banner.jpg"
                %>');">
                <button class="edit-banner-btn" onclick="openEditImagesModal()">
                    <i class="fas fa-camera"></i>
                    <span>Edit Profile or Banner</span>
                </button>
            </div>
            <div class="profile-info">
                <div class="profile-pic">
                    <img src="<%= brand.logoUrl %>" alt="<%= brand.name %>">
                </div>
                <div class="profile-name">
                    <h1>
                        <%= brand.username %>
                    </h1>
                    <p class="username">@<%= brand.username %>
                    </p>
                    <div class="profile-status">
                        <% if (brand.verified) { %>
                            <span class="premium-badge">
                                <i class="fas fa-check-circle"></i> VERIFIED
                            </span>
                            <% } else { %>
                                <span class="premium-badge pending-badge">
                                    <i class="fas fa-clock"></i> PENDING VERIFICATION
                                </span>
                                <% } %>
                                    <span class="influence-info">
                                        Primary market: <%= brand.primaryMarket || 'Not specified' %>
                                            <% if (brand.primaryMarket) { %>
                                                <%= brand.primaryMarket.includes('Global') ? '🌎' : '' %>
                                                    <%= brand.primaryMarket.includes('US') ? '🇺🇸' : '' %>
                                                        <%= brand.primaryMarket.includes('UK') ? '🇬🇧' : '' %>
                                                            <%= brand.primaryMarket.includes('Europe') ? '🇪🇺' : '' %>
                                                                <%= brand.primaryMarket.includes('Asia') ? '🌏' : '' %>
                                                                    <% } %>
                                    </span>
                    </div>
                </div>
            </div>
        </section>

        <div class="profile-content">
            <div class="profile-main">

                <!-- About Tab -->
                <div id="about-tab" class="tab-content active">
                    <div class="profile-bio">
                        <div class="section-header">
                            <h2>About <%= brand.name %>
                            </h2>
                            <button class="btn-edit" onclick="openEditModal()">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                        </div>
                        <p class="bio-text">
                            <%= brand.description || 'No description provided.' %>
                        </p>

                        <% if (brand.mission) { %>
                            <div class="info-section mission-section">
                                <h3><i class="fas fa-bullseye"></i> Our Mission</h3>
                                <p>
                                    <%= brand.mission %>
                                </p>
                            </div>
                            <% } %>

                                <% if (brand.currentCampaign) { %>
                                    <div class="info-section campaign-section">
                                        <h3><i class="fas fa-rocket"></i> Current Campaign Goals</h3>
                                        <p>
                                            <%= brand.currentCampaign %>
                                        </p>
                                    </div>
                                    <% } %>

                                        <div class="info-section values-section">
                                            <h3><i class="fas fa-heart"></i> Brand Categories</h3>
                                            <div class="values-tags">
                                                <% brand.values.forEach(value=> { %>
                                                    <span class="value-tag">
                                                        <%= value %>
                                                    </span>
                                                    <% }); %>
                                            </div>
                                        </div>
                    </div>

                    <div class="metrics-section">
                        <h2>Brand Performance</h2>
                        <div class="metrics-grid">
                            <div class="metric-card">
                                <div class="metric-icon"><i class="fas fa-chart-line"></i></div>
                                <div class="metric-value">
                                    <%= brand.completedCampaigns %>
                                </div>
                                <div class="metric-label">Campaigns</div>
                            </div>
                            <div class="metric-card">
                                <div class="metric-icon"><i class="fas fa-users"></i></div>
                                <div class="metric-value">
                                    <%= brand.influencerPartnerships %>
                                </div>
                                <div class="metric-label">Partnerships</div>
                            </div>
                            <div class="metric-card">
                                <div class="metric-icon"><i class="fas fa-star"></i></div>
                                <div class="metric-value">
                                    <%= brand.avgCampaignRating %>
                                </div>
                                <div class="metric-label">Avg. Rating</div>
                            </div>
                            <div class="metric-card">
                                <div class="metric-icon"><i class="fas fa-bullhorn"></i></div>
                                <div class="metric-value">
                                    <%= brand.totalAudience.toLocaleString() %>
                                </div>
                                <div class="metric-label">Total Audience</div>
                            </div>
                        </div>
                    </div>

                    <div class="campaigns-section">
                        <h2>Top Campaigns</h2>
                        <% if (brand.topCampaigns && brand.topCampaigns.length> 0) { %>
                            <div class="campaigns-grid">
                                <% brand.topCampaigns.forEach(campaign=> { %>
                                    <div class="campaign-card">
                                        <div class="campaign-status <%= campaign.status.toLowerCase() %>">
                                            <i class="fas fa-circle"></i>
                                            <%= campaign.status %>
                                        </div>
                                        <h3 class="campaign-title">
                                            <%= campaign.title %>
                                        </h3>
                                        <div class="campaign-stats">
                                            <div class="stat">
                                                <i class="fas fa-chart-line"></i>
                                                <span>
                                                    <%= campaign.performance_score ?
                                                        campaign.performance_score.toFixed(1) : '0.0' %>
                                                </span>
                                                <label>Performance</label>
                                            </div>
                                            <div class="stat">
                                                <i class="fas fa-eye"></i>
                                                <span>
                                                    <%= campaign.reach ? campaign.reach.toLocaleString() : '0' %>
                                                </span>
                                                <label>Reach</label>
                                            </div>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                            <% } else { %>
                                <p class="no-data-message">No campaigns available to display.</p>
                                <% } %>
                    </div>
                </div>
            </div>

            <div class="profile-sidebar">
                <div class="profile-card social-card">
                    <h3>Social Media</h3>
                    <div class="social-stats">
                        <% brand.socialLinks.forEach(platform=> { %>
                            <div class="social-item">
                                <i class="fab fa-<%= platform.platform %>"></i>
                                <span class="count">
                                    <%= platform.followers.toLocaleString() %>
                                </span>
                                <span class="label">followers</span>
                            </div>
                            <% }); %>
                    </div>
                </div>

                <div class="profile-card">
                    <h3>Website</h3>
                    <a href="<%= brand.website %>" class="website-link" target="_blank">
                        <i class="fas fa-globe"></i>
                        <%= brand.website.replace(/^https?:\/\//, '' ) %>
                    </a>
                </div>

                <div class="profile-card audience-card">
                    <h3>Target Audience</h3>
                    <div class="audience-info">
                        <div class="audience-item">
                            <i class="fas fa-birthday-cake"></i>
                            <span><strong>Ages:</strong>
                                <%= brand.targetAgeRange || 'Not specified' %>
                            </span>
                        </div>
                        <div class="audience-item">
                            <i class="fas fa-venus-mars"></i>
                            <span><strong>Gender:</strong>
                                <%= brand.targetGender || 'Not specified' %>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="profile-card actions-card">
                    <button class="btn-danger" onclick="openDeleteModal()">
                        <i class="fas fa-trash-alt"></i> Delete Account
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Profile Modal -->
    <div class="modal" id="editProfileModal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeEditModal()">&times;</span>
            <h2>Edit Brand Profile</h2>
            <form id="profileForm" action="/brand/profile/update" method="POST">
                <div class="form-row">
                    <div class="form-group">
                        <label for="brandName">Brand Name</label>
                        <input type="text" class="form-control" id="brandName" name="name" value="<%= brand.name %>"
                            required>
                    </div>
                    <div class="form-group">
                        <label for="brandUsername">Username</label>
                        <input type="text" class="form-control" id="brandUsername" name="username"
                            value="<%= brand.username %>" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="brandDescription">Brand Description</label>
                    <textarea class="form-control" id="brandDescription" name="description"
                        required><%= brand.description %></textarea>
                </div>

                <div class="form-group">
                    <label for="brandMission">Mission Statement</label>
                    <textarea class="form-control" id="brandMission" name="mission"><%= brand.mission %></textarea>
                </div>

                <div class="form-group">
                    <label for="currentCampaign">Current Campaign Goals</label>
                    <textarea class="form-control" id="currentCampaign"
                        name="currentCampaign"><%= brand.currentCampaign %></textarea>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="primaryMarket">Primary Market</label>
                        <select class="form-control" id="primaryMarket" name="primaryMarket">
                            <option value="">Select market</option>
                            <option value="Global" <%=brand.primaryMarket==='Global' ? 'selected' : '' %>>Global
                            </option>
                            <option value="US" <%=brand.primaryMarket==='US' ? 'selected' : '' %>>United States</option>
                            <option value="UK" <%=brand.primaryMarket==='UK' ? 'selected' : '' %>>United Kingdom
                            </option>
                            <option value="Europe" <%=brand.primaryMarket==='Europe' ? 'selected' : '' %>>Europe
                            </option>
                            <option value="Asia" <%=brand.primaryMarket==='Asia' ? 'selected' : '' %>>Asia</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="brandWebsite">Website</label>
                        <input type="url" class="form-control" id="brandWebsite" name="website"
                            value="<%= brand.website %>" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="valueInput">Brand Categories</label>
                    <div id="valuesContainer" class="tag-container">
                        <% brand.values.forEach(value=> { %>
                            <span class="tag">
                                <%= value %>
                                    <span class="tag-remove" onclick="removeTag(this)">×</span>
                                    <input type="hidden" name="values[]" value="<%= value %>">
                            </span>
                            <% }); %>
                    </div>
                    <div class="input-group">
                        <input type="text" class="form-control" id="valueInput" placeholder="Add a category...">
                        <button type="button" class="btn-secondary" onclick="addValue()">Add</button>
                    </div>
                </div>

                <div class="form-group">
                    <label>Target Audience</label>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="targetAgeRange">Target Age Range</label>
                            <input type="text" class="form-control" id="targetAgeRange" name="targetAgeRange"
                                value="<%= brand.targetAgeRange %>" required>
                        </div>
                        <div class="form-group">
                            <label for="targetGender">Primary Gender</label>
                            <select class="form-control" id="targetGender" name="targetGender" required>
                                <option value="">Select gender</option>
                                <option value="Male" <%=brand.targetGender==='Male' ? 'selected' : '' %>>Male</option>
                                <option value="Female" <%=brand.targetGender==='Female' ? 'selected' : '' %>>Female
                                </option>
                                <option value="All" <%=brand.targetGender==='All' ? 'selected' : '' %>>All</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label>Social Media Links</label>
                    <div id="socialLinks" class="social-links-container">
                        <% brand.socialLinks.forEach((platform, index)=> { %>
                            <div class="social-platform-row">
                                <div class="form-group">
                                    <select class="form-control" name="socialLinks[<%= index %>][platform]">
                                        <option value="instagram" <%=platform.platform==='instagram' ? 'selected' : ''
                                            %>>Instagram</option>
                                        <option value="facebook" <%=platform.platform==='facebook' ? 'selected' : '' %>
                                            >Facebook</option>
                                        <option value="twitter" <%=platform.platform==='twitter' ? 'selected' : '' %>
                                            >Twitter</option>
                                        <option value="youtube" <%=platform.platform==='youtube' ? 'selected' : '' %>
                                            >YouTube</option>
                                        <option value="tiktok" <%=platform.platform==='tiktok' ? 'selected' : '' %>
                                            >TikTok</option>
                                        <option value="linkedin" <%=platform.platform==='linkedin' ? 'selected' : '' %>
                                            >LinkedIn</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <input type="url" class="form-control" name="socialLinks[<%= index %>][url]"
                                        value="<%= platform.url %>" placeholder="Profile URL">
                                </div>
                                <div class="form-group">
                                    <input type="number" class="form-control"
                                        name="socialLinks[<%= index %>][followers]" value="<%= platform.followers %>"
                                        placeholder="Followers">
                                </div>
                                <button type="button" class="btn-secondary" onclick="removeSocialLink(this)">×</button>
                            </div>
                            <% }); %>
                    </div>
                    <button type="button" class="btn-secondary" onclick="addSocialLink()">
                        <i class="fas fa-plus"></i> Add Social Link
                    </button>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn-secondary" onclick="closeEditModal()">Cancel</button>
                    <button type="submit" class="btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Edit Images Modal -->
    <div class="modal" id="editImagesModal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeEditImagesModal()">&times;</span>
            <h2>Edit Brand Images</h2>
            <form id="imagesForm" action="/brand/profile/update-images" method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="logoUpload">Brand Logo</label>
                    <div class="file-upload">
                        <label class="file-upload-label" for="logoUpload">
                            <i class="fas fa-camera" style="margin-right: 8px;"></i>
                            Click to upload new logo
                            <input type="file" class="file-upload-input" id="logoUpload" name="logo" accept="image/*">
                        </label>
                        <img id="logoPreview" class="preview-image"
                            src="<%= brand.logoUrl || '/images/default-brand.png' %>" alt="Logo Preview">
                    </div>
                </div>

                <div class="form-group">
                    <label for="bannerUpload">Banner Image</label>
                    <div class="file-upload">
                        <label class="file-upload-label" for="bannerUpload">
                            <i class="fas fa-image" style="margin-right: 8px;"></i>
                            Click to upload new banner
                            <input type="file" class="file-upload-input" id="bannerUpload" name="banner"
                                accept="image/*">
                        </label>
                        <img id="bannerPreview" class="preview-image"
                            src="<%= brand.bannerUrl || '/images/default-banner.jpg' %>" alt="Banner Preview">
                    </div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn-secondary" onclick="closeEditImagesModal()">Cancel</button>
                    <button type="submit" class="btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Account Modal -->
    <div class="modal" id="deleteAccountModal">
        <div class="modal-content" style="max-width: 500px;">
            <span class="close-modal" onclick="closeDeleteModal()">&times;</span>
            <h2>Delete Your Account</h2>
            <div style="margin-bottom: 20px;">
                <p>Are you sure you want to delete your brand account? This action cannot be undone.</p>
                <p>All your campaigns, collaborations, and data will be permanently removed.</p>
            </div>
            <form id="deleteAccountForm" action="/brand/profile/delete" method="POST">
                <div class="form-group">
                    <label for="confirmDelete">Type "DELETE" to confirm:</label>
                    <input type="text" class="form-control" id="confirmDelete" placeholder="DELETE" required>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn-secondary" onclick="closeDeleteModal()">Cancel</button>
                    <button type="submit" class="btn-danger" id="deleteBtn" disabled>Delete Account Permanently</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Global functions for tag and social link management
        function addTag(containerId, inputId, name) {
            const input = document.getElementById(inputId);
            const container = document.getElementById(containerId);

            if (input && container && input.value.trim() !== '') {
                const tag = document.createElement('span');
                tag.className = 'tag';
                tag.innerHTML = `
                    ${input.value.trim()}
                    <span class="tag-remove" onclick="removeTag(this)">×</span>
                    <input type="hidden" name="${name}[]" value="${input.value.trim()}">
                `;
                container.appendChild(tag);
                input.value = '';
            }
        }

        function addValue() {
            addTag('valuesContainer', 'valueInput', 'values');
        }

        function removeTag(element) {
            if (element && element.parentElement) {
                element.parentElement.remove();
            }
        }

        function addSocialLink() {
            const container = document.getElementById('socialLinks');
            if (!container) return;

            const newLink = document.createElement('div');
            newLink.className = 'social-platform-row';
            const index = container.children.length;
            newLink.innerHTML = `
                <div class="form-group">
                    <select class="form-control" name="socialLinks[${index}][platform]">
                        <option value="instagram">Instagram</option>
                        <option value="facebook">Facebook</option>
                        <option value="twitter">Twitter</option>
                        <option value="youtube">YouTube</option>
                        <option value="tiktok">TikTok</option>
                        <option value="linkedin">LinkedIn</option>
                    </select>
                </div>
                <div class="form-group">
                    <input type="url" class="form-control" name="socialLinks[${index}][url]" placeholder="Profile URL">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="socialLinks[${index}][followers]" placeholder="Followers">
                </div>
                <button type="button" class="btn-secondary" onclick="removeSocialLink(this)">×</button>
            `;
            container.appendChild(newLink);
        }

        function removeSocialLink(button) {
            if (button && button.closest('.social-platform-row')) {
                button.closest('.social-platform-row').remove();
            }
        }

        // Initialize all event listeners when the DOM is loaded
        document.addEventListener('DOMContentLoaded', function () {
            // Modal functions
            const editModal = document.getElementById('editProfileModal');
            const deleteModal = document.getElementById('deleteAccountModal');

            if (editModal) {
                window.openEditModal = function () {
                    editModal.style.display = 'block';
                };
                window.closeEditModal = function () {
                    editModal.style.display = 'none';
                };
            }

            if (deleteModal) {
                window.openDeleteModal = function () {
                    deleteModal.style.display = 'block';
                };
                window.closeDeleteModal = function () {
                    deleteModal.style.display = 'none';
                };
            }

            // Close modals when clicking outside
            window.addEventListener('click', function (event) {
                if (event.target === editModal) {
                    closeEditModal();
                }
                if (event.target === deleteModal) {
                    closeDeleteModal();
                }
            });

            // Form submission handling
            const profileForm = document.getElementById('profileForm');
            if (profileForm) {
                profileForm.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    // Get all form data
                    const formData = new FormData(this);

                    // Collect values array from both visible and hidden inputs
                    const values = [];
                    const valueInputs = document.querySelectorAll('input[name="values[]"]');
                    console.log('Found value inputs:', valueInputs.length);
                    valueInputs.forEach(input => {
                        console.log('Value input:', input.value);
                        if (input.value.trim()) {
                            values.push(input.value.trim());
                        }
                    });

                    // Collect social links
                    const socialLinks = [];
                    const socialLinkRows = document.querySelectorAll('.social-platform-row');
                    console.log('Found social link rows:', socialLinkRows.length);

                    socialLinkRows.forEach(row => {
                        const platform = row.querySelector('select[name$="[platform]"]')?.value?.trim();
                        const url = row.querySelector('input[name$="[url]"]')?.value?.trim();
                        const followers = row.querySelector('input[name$="[followers]"]')?.value?.trim();

                        console.log('Social link:', { platform, url, followers });

                        // Only require platform and followers, URL can be empty for new links
                        if (platform && followers) {
                            socialLinks.push({
                                platform,
                                url: url || '', // Allow empty URL
                                followers: parseInt(followers) || 0
                            });
                        }
                    });

                    // Get target audience fields directly from the form
                    const targetAgeRange = document.getElementById('targetAgeRange')?.value?.trim();
                    const targetGender = document.getElementById('targetGender')?.value?.trim();

                    console.log('Target Audience:', { targetAgeRange, targetGender });

                    // Get all form fields
                    const data = {
                        name: formData.get('name')?.trim(),
                        username: formData.get('username')?.trim(),
                        description: formData.get('description')?.trim(),
                        mission: formData.get('mission')?.trim(),
                        currentCampaign: formData.get('currentCampaign')?.trim(),
                        primaryMarket: formData.get('primaryMarket')?.trim(),
                        website: formData.get('website')?.trim(),
                        targetAgeRange: targetAgeRange,
                        targetGender: targetGender,
                        values: values,
                        socialLinks: socialLinks
                    };

                    // Debug logging
                    console.log('Form fields:', {
                        name: formData.get('name'),
                        username: formData.get('username'),
                        description: formData.get('description'),
                        mission: formData.get('mission'),
                        currentCampaign: formData.get('currentCampaign'),
                        primaryMarket: formData.get('primaryMarket'),
                        website: formData.get('website'),
                        targetAgeRange: targetAgeRange,
                        targetGender: targetGender
                    });
                    console.log('Values array:', values);
                    console.log('Social links:', socialLinks);
                    console.log('Complete data object:', data);

                    // Validate required fields
                    const requiredFields = ['name', 'username', 'description', 'website', 'targetAgeRange', 'targetGender'];
                    const missingFields = requiredFields.filter(field => !data[field]);

                    if (missingFields.length > 0) {
                        alert(`Please fill in all required fields: ${missingFields.join(', ')}`);
                        return;
                    }

                    // Validate website URL
                    try {
                        new URL(data.website);
                    } catch {
                        alert('Please enter a valid website URL');
                        return;
                    }

                    // Validate social links
                    for (const link of socialLinks) {
                        // Only validate URL if it's not empty
                        if (link.url) {
                            try {
                                new URL(link.url);
                            } catch {
                                alert(`Please enter a valid URL for ${link.platform}`);
                                return;
                            }
                        }

                        if (isNaN(link.followers) || link.followers < 0) {
                            alert(`Please enter a valid followers count for ${link.platform}`);
                            return;
                        }
                    }

                    try {
                        const response = await fetch('/brand/profile/update', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'Accept': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.message || 'Failed to update profile');
                        }

                        const result = await response.json();

                        if (result.success) {
                            alert('Profile updated successfully!');
                            window.location.reload();
                        } else {
                            alert(result.message || 'Error updating profile');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert(error.message || 'An error occurred while updating the profile');
                    }
                });
            }

            // Delete account functionality
            const confirmDeleteInput = document.getElementById('confirmDelete');
            const deleteBtn = document.getElementById('deleteBtn');
            const deleteAccountForm = document.getElementById('deleteAccountForm');

            if (confirmDeleteInput && deleteBtn) {
                confirmDeleteInput.addEventListener('input', function (e) {
                    deleteBtn.disabled = this.value !== 'DELETE';
                });
            }

            if (deleteAccountForm) {
                deleteAccountForm.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    if (confirmDeleteInput.value !== 'DELETE') {
                        alert('Please type "DELETE" to confirm account deletion');
                        return;
                    }

                    if (!confirm('Are you absolutely sure you want to delete your account? This action cannot be undone.')) {
                        return;
                    }

                    try {
                        const response = await fetch(this.action, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const result = await response.json();

                        if (result.success) {
                            alert('Account deleted successfully');
                            window.location.href = '/'; // Redirect to home page
                        } else {
                            alert(result.message || 'Error deleting account');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('An error occurred while deleting the account');
                    }
                });
            }

            // Sidebar toggle functions
            const navMenu = document.getElementById('navMenu');
            if (navMenu) {
                window.openMenu = function () {
                    navMenu.style.width = "250px";
                };
                window.closeMenu = function () {
                    navMenu.style.width = "0";
                };
            }

            // Image Upload Modal Functions
            const editImagesModal = document.getElementById('editImagesModal');

            window.openEditImagesModal = function () {
                editImagesModal.style.display = 'block';
            };

            window.closeEditImagesModal = function () {
                editImagesModal.style.display = 'none';
            };

            // Close modal when clicking outside
            window.addEventListener('click', function (event) {
                if (event.target === editImagesModal) {
                    closeEditImagesModal();
                }
            });

            // Form Submission for Images
            document.getElementById('imagesForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const formData = new FormData(this);
                const logoFile = formData.get('logo');
                const bannerFile = formData.get('banner');

                // Validate file types
                if (logoFile && logoFile.size > 0) {
                    if (!logoFile.type.startsWith('image/')) {
                        alert('Please upload a valid image file for the logo');
                        return;
                    }
                }

                if (bannerFile && bannerFile.size > 0) {
                    if (!bannerFile.type.startsWith('image/')) {
                        alert('Please upload a valid image file for the banner');
                        return;
                    }
                }

                try {
                    const response = await fetch(this.action, {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'Failed to update images');
                    }

                    const result = await response.json();

                    if (result.success) {
                        alert('Images updated successfully!');
                        window.location.reload();
                    } else {
                        alert(result.message || 'Error updating images');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert(error.message || 'An error occurred while updating images');
                }
            });

            // Image Preview Functionality
            document.getElementById('logoUpload').addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    if (!file.type.startsWith('image/')) {
                        alert('Please select a valid image file');
                        this.value = '';
                        return;
                    }
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById('logoPreview').src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });

            document.getElementById('bannerUpload').addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    if (!file.type.startsWith('image/')) {
                        alert('Please select a valid image file');
                        this.value = '';
                        return;
                    }
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById('bannerPreview').src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });

            // Update the edit buttons to use the correct modal
            const editBannerBtn = document.querySelector('.edit-banner-btn');
            if (editBannerBtn) {
                editBannerBtn.onclick = openEditImagesModal;
            }
        });
    </script>
</body>

</html>